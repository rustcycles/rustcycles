[package]
name = "rustcycles"
version = "0.0.0"
edition = "2021"
rust-version = "1.73"
resolver = "2"
authors = ["Martin Taibr <taibr.martin@gmail.com>"]

[profile.dev]
# Abort on panic might be a better default: https://vorner.github.io/2018/07/22/dont_panic.html
# This makes backtraces useless, see .cargo/config-example.toml for a fix.
# It also means that tests need a separate build of all deps because they use unwinding,
# though at least the artifacts from build and test can coexist
# so alternating between them won't cause a full build each time.
# Seems to have no impact on incremental compile times.
# Keep "unwind" in debug mode so we can use tests more easily.
#panic = "abort"
opt-level = 1 # Can be changed without recompiling all deps

[profile.dev.package."*"]
# Optimize deps but not this crate itself (tip from macroquad).
# This seems to slightly improve performance (e.g. loading a model goes from 1.4 s to 0.2 s)
# and shouldn't meaningfully increase incremental compile times because deps only change rarely.
opt-level = 3
codegen-units = 1
debug = false

[profile.release]
# Using "abort" in release mode might be better because otherwise the program can get stuck
# if we use threads wrong and crashing is slightly better than getting stuck.
panic = "abort"

# https://doc.rust-lang.org/cargo/reference/profiles.html#build-dependencies
# The reference might be wrong - it says this affects proc macros but in my experience it doesn't.
# No effect so far because we don't use and build deps yet.
[profile.dev.build-override]
opt-level = 3
codegen-units = 1

[profile.release.build-override]
opt-level = 3
codegen-units = 1

[dependencies]
bincode = "1.3.3"
cvars = "0.4.2"
cvars-console-fyrox = "0.5.0"
fxhash = "0.2.1"
fyrox = "0.33.1"
inline_tweak = "1.2.1"
rand = { version = "0.8.5", default-features = false }
rand_distr = { version = "0.4.3", default-features = false }
rand_xoshiro = "0.6.0"
serde = { version = "1.0.217", features = ["derive"] }
strum = "0.26.3"
strum_macros = "0.26.4"

# Note: sometimes it's necessary to run cargo update after patching a dependency.
[patch.crates-io]
# In general, if you override one of these, you need to override everything
# so that cvars-console-fyrox uses the same version of cvars and fyrox-ui.

#cvars = { path = "../cvars/cvars" }
#cvars = { git = "https://github.com/martin-t/cvars", rev = "efb4f71422563d49813f21a67c3b9fb253e44387" }

#cvars-console-fyrox = { path = "../cvars/cvars-console-fyrox" }
#cvars-console-fyrox = { git = "https://github.com/martin-t/cvars", rev = "efb4f71422563d49813f21a67c3b9fb253e44387" }

#fyrox = { git = "https://github.com/FyroxEngine/Fyrox", rev = "7307756adf3cbfa65ca158998fc2440df10b80b2" }
#fyrox = { git = "https://github.com/martin-t/Fyrox", rev = "6fcc4d0cc261611428333aea4fcf1e551812375b" }
#fyrox = { path = "../Fyrox" }

#fyrox-ui = { git = "https://github.com/FyroxEngine/Fyrox", rev = "7307756adf3cbfa65ca158998fc2440df10b80b2" }
#fyrox-ui = { git = "https://github.com/martin-t/Fyrox", rev = "6fcc4d0cc261611428333aea4fcf1e551812375b" }
#fyrox-ui = { path = "../Fyrox/fyrox-ui" }
